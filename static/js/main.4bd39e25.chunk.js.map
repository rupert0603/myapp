{"version":3,"sources":["reducers/index.js","actions/index.js","components/LoginForm.js","components/RegistrationForm.js","components/AddEntryForm.js","components/Month.js","components/Calendar.js","components/Entry.js","components/MonthlyEntries.js","components/Entries.js","App.js","reportWebVitals.js","index.js"],"names":["currentUser","filteredEntries","newFilteredEntriesByYear","newFilteredEntriesByMonth","login","user","type","payload","setEntries","entries","setShowMonthlyEntries","clickedMonthData","LoginForm","state","username","password","loginBtnHandler","axios","post","then","res","data","error","alert","localStorage","setItem","token","JSON","stringify","userFound","props","value","this","onChange","e","setState","target","onClick","React","Component","connect","RegistrationForm","firstName","lastName","confirmPassword","register","userData","AddEntryForm","dateForm","contentForm","dateChangeHandler","contentChangeHandler","submitFormHandler","addNewEntryHandler","toggleAddEntryForm","preventDefault","user_id","_id","entryDate","content","headers","Authorization","getItem","localStorageEntries","parse","push","addEntry","onSubmit","htmlFor","id","required","autoFocus","cols","rows","newEntry","Month","className","index","month","filteredEntriesByYear","months","Calendar","previousClickHandler","setSelectedYear","year","nextClickHandler","map","yearSelected","Entry","isEditClicked","isDeleteClicked","editedContent","entry","editContentChangeHandler","editBtnClickHandler","deleteBtnClickHandler","submitBtnHandler","patch","length","updateEntry","updatedEntries","entryUpdated","newContent","deleteEntry","delete","filter","dataUpdated","deletedEntry","MonthlyEntries","filteredEntriesByMonth","Entries","showAddEntryForm","isLogoutClicked","logoutHandler","removeItem","logout","get","params","showMonthlyEntries","to","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","currentYear","Date","getFullYear","filterEntriesByYear","slice","filterEntriesByMonth","sortMonthEntries","sortedEntries","i","lowest","j","initialState","currentMonthShown","reducer","action","monthOfEntryAdded","newEntries","newShowMonthlyEntries","newCurrentMonthShown","ReactDOM","render","StrictMode","store","createStore","document","getElementById"],"mappings":"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","file":"static/js/main.4bd39e25.chunk.js","sourcesContent":["let currentUser;\r\nlet entries = [];\r\nlet filteredEntries;\r\nlet newFilteredEntriesByYear;\r\nlet newFilteredEntriesByMonth;\r\nconst currentDate = new Date();\r\nconst currentYear = currentDate.getFullYear();\r\n\r\nconst filterEntriesByYear = (entries, year) => {\r\n  let filteredEntries;\r\n\r\n  filteredEntries = entries.filter((entry) => {\r\n    return entry.entryDate.slice(0, 4)*1 === year;\r\n  });\r\n\r\n  return filteredEntries;\r\n  \r\n}\r\n\r\nconst filterEntriesByMonth = (entries, month) => {\r\n\r\n  let filteredEntries;\r\n\r\n  filteredEntries = entries.filter((entry) => {\r\n    return (entry.entryDate.slice(5,7)*1)  === month;\r\n  });\r\n  filteredEntries = sortMonthEntries(filteredEntries);\r\n\r\n  return filteredEntries;\r\n}\r\n\r\nconst sortMonthEntries = (entries) => {\r\n  let sortedEntries = entries;\r\n  \r\n  for(let i = 0; i < sortedEntries.length-1; ++i){\r\n\r\n    let lowest = sortedEntries[i];\r\n    let index = i;\r\n    \r\n      for(let j = i+1; j <= sortedEntries.length-1 ; ++j){\r\n\r\n        if(lowest.entryDate.slice(8)*1 > sortedEntries[j].entryDate.slice(8)*1){\r\n          lowest = sortedEntries[j];\r\n          index = j;\r\n        }\r\n  \r\n      }\r\n  \r\n    sortedEntries[index] = sortedEntries[i];  \r\n    sortedEntries[i] = lowest;\r\n  \r\n    index = 0; \r\n  }\r\n\r\n  return sortedEntries;\r\n}\r\n\r\n//initialize state\r\nif(localStorage.getItem('currentUser') && localStorage.getItem('token')){\r\n  currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n  entries = JSON.parse(localStorage.getItem('entries'));\r\n} else {\r\n  currentUser = null;\r\n  entries = [];\r\n}\r\n\r\n//initialize state\r\nif(entries){\r\n  filteredEntries = filterEntriesByYear(entries, currentYear);\r\n} else {\r\n  filteredEntries = [];\r\n}\r\n\r\nconst initialState = {\r\n  user: currentUser,\r\n  entries: entries,\r\n  yearSelected: currentYear,\r\n  filteredEntriesByYear: filteredEntries, \r\n  showMonthlyEntries: false, //updates once user clicks month\r\n  filteredEntriesByMonth: [], //will only have content once user clicks a month, \r\n  currentMonthShown: -1, //updates once user clicks a month; -1 means there's no month selected\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch(action.type){\r\n\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    \r\n    case 'SET_ENTRIES':\r\n      \r\n      newFilteredEntriesByYear = filterEntriesByYear(action.payload, state.yearSelected);\r\n      //on the first load of the entroes, we will not sort it by month since user still\r\n      //has not selected a month      \r\n\r\n      return {\r\n        ...state,\r\n        entries: action.payload,\r\n        filteredEntriesByYear: newFilteredEntriesByYear,\r\n      };\r\n\r\n    case 'ADD_ENTRY':\r\n      let monthOfEntryAdded = action.payload.entryDate.slice(5,7)*1;\r\n      newFilteredEntriesByMonth = state.filteredEntriesByMonth;\r\n\r\n      let {entries: newEntries} = state;\r\n      newEntries.push(action.payload);\r\n\r\n      //update entries in currently selected year\r\n      if(action.payload.entryDate.slice(0, 4)*1 === state.yearSelected){\r\n        newFilteredEntriesByYear = state.filteredEntriesByYear;\r\n        newFilteredEntriesByYear.push(action.payload);\r\n      }\r\n\r\n      //if page is currently showing a monthly entries, update the entries in currently selected month\r\n      //filter the filteredEntriesByYear to get a updated list of the filtered entries by month\r\n      //if there is no month selected/shown, then no need to filter the month\r\n      if(state.currentMonthShown !== -1 && monthOfEntryAdded === state.currentMonthShown+1){\r\n          newFilteredEntriesByMonth = filterEntriesByMonth(\r\n            newFilteredEntriesByYear, \r\n            state.currentMonthShown+1 //add one since currentMonthShown starts at zero for January\r\n          );\r\n\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        entries: newEntries,\r\n        filteredEntriesByYear: newFilteredEntriesByYear,\r\n        filteredEntriesByMonth: newFilteredEntriesByMonth,\r\n      };\r\n    \r\n    case 'SET_USER':\r\n      return {\r\n        ...state,\r\n        user: JSON.parse(localStorage.getItem('currentUser')),\r\n      };\r\n\r\n    case 'SET_SELECTED_YEAR':\r\n\r\n      newFilteredEntriesByYear = filterEntriesByYear(state.entries, action.payload);\r\n      \r\n      return {\r\n        ...state,\r\n        yearSelected: action.payload,\r\n        filteredEntriesByYear: newFilteredEntriesByYear,\r\n        showMonthlyEntries: false, \r\n        filteredEntriesByMonth: [],\r\n        currentMonthShown: -1,\r\n        //when year selected is changed, we want to rest the page, showing no list of monthly entries\r\n      };\r\n\r\n    case 'SET_SHOW_MONTHLY_ENTRIES':\r\n\r\n      let newShowMonthlyEntries;\r\n      let newCurrentMonthShown;\r\n\r\n      if (action.payload !== state.currentMonthShown) {\r\n        newShowMonthlyEntries = true;\r\n\r\n        //if the month clicked is not the same as what's currently shown (including NONE aka -1),\r\n        //then set the showMonthlyEntries to true to show the month clicked\r\n\r\n      } else {\r\n        newShowMonthlyEntries = !state.showMonthlyEntries;\r\n        //if the same month is clicked, then just toggle it\r\n      }\r\n\r\n      //if newCurrentMonthShown is false (hidden), then set the relevant state properties to blank\r\n      if(!newShowMonthlyEntries){\r\n        newCurrentMonthShown = -1;\r\n        newFilteredEntriesByMonth = [];\r\n      } else {\r\n        newCurrentMonthShown = action.payload;\r\n        newFilteredEntriesByMonth = filterEntriesByMonth(\r\n          state.filteredEntriesByYear,\r\n          action.payload+1 //add one since action.payload starts at zero for January\r\n        );\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        showMonthlyEntries: newShowMonthlyEntries,\r\n        filteredEntriesByMonth: newFilteredEntriesByMonth,\r\n        currentMonthShown: newCurrentMonthShown,\r\n      };\r\n\r\n\r\n    case 'UPDATE_ENTRY':\r\n\r\n      entries = state.entries;\r\n\r\n      //update the entries\r\n      entries = entries.map((entry) => {\r\n        if (entry._id === action.payload.entryUpdated._id){\r\n          entry.content = action.payload.newContent;\r\n        }\r\n\r\n        return entry;\r\n      });\r\n\r\n      //update the entriesfilteredyear\r\n      newFilteredEntriesByYear = filterEntriesByYear(entries, state.yearSelected);\r\n\r\n      //update the entriesfilteredmonth\r\n      newFilteredEntriesByMonth = filterEntriesByMonth(entries, state.currentMonthShown+1);\r\n\r\n      return {\r\n        ...state,\r\n        entries: entries,\r\n        filteredEntriesByYear: newFilteredEntriesByYear,\r\n        filteredEntriesByMonth: newFilteredEntriesByMonth,\r\n      };\r\n\r\n    case 'DELETE_ENTRY':\r\n\r\n      newFilteredEntriesByMonth = state.filteredEntriesByMonth;\r\n      \r\n      //remove the deleted entry from the state.entries\r\n      entries = state.entries.filter((entry) => {\r\n        return entry._id !== action.payload._id;\r\n      });\r\n\r\n      //filter the state.entries again by year\r\n      newFilteredEntriesByYear = filterEntriesByYear(entries, state.yearSelected);\r\n      \r\n      newFilteredEntriesByMonth = newFilteredEntriesByMonth.filter((entry) => {\r\n        return entry._id !== action.payload._id;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        entries: entries,\r\n        filteredEntriesByYear: newFilteredEntriesByYear,\r\n        filteredEntriesByMonth: newFilteredEntriesByMonth,\r\n      }\r\n\r\n    case 'LOGOUT':\r\n      //turn state into default values\r\n      return {\r\n        user: null,\r\n        entries: [],\r\n        yearSelected: currentYear,\r\n        filteredEntriesByYear: [], \r\n        showMonthlyEntries: false, \r\n        filteredEntriesByMonth: [],  \r\n        currentMonthShown: -1, \r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n  \r\n};\r\n\r\nexport default reducer;\r\n\r\n\r\n","export const login = (user) => {\r\n  return {\r\n    type: 'LOGIN',\r\n    payload: user\r\n  }\r\n}\r\n\r\nexport const setEntries = (entries) => {\r\n  return {\r\n    type: 'SET_ENTRIES',\r\n    payload: entries,\r\n  }\r\n}\r\n\r\nexport const setUser = () => {\r\n  return {\r\n    type: 'SET_USER',\r\n  }\r\n}\r\n\r\nexport const setSelectedYear = (year) => {\r\n  return {\r\n    type: 'SET_SELECTED_YEAR',\r\n    payload: year,\r\n  }\r\n}\r\n\r\nexport const setShowMonthlyEntries = (clickedMonthData) => {\r\n  return {\r\n    type: 'SET_SHOW_MONTHLY_ENTRIES',\r\n    payload: clickedMonthData, \r\n  }\r\n}\r\n\r\nexport const updateEntry = (dataUpdated) => {\r\n  return {\r\n    type: 'UPDATE_ENTRY',\r\n    payload: dataUpdated,\r\n  }\r\n}\r\n\r\nexport const addEntry = (newEntry) => {\r\n  return {\r\n    type: 'ADD_ENTRY',\r\n    payload: newEntry,\r\n  }\r\n}\r\n\r\nexport const deleteEntry = (deletedEntry) => {\r\n  return {\r\n    type: 'DELETE_ENTRY',\r\n    payload: deletedEntry,\r\n  }\r\n\r\n}\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: 'LOGOUT',\r\n  }\r\n}\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { login } from '../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass LoginForm extends React.Component {\r\n  \r\n  state = {\r\n    username: \"\",\r\n    password: \"\",    \r\n  }\r\n\r\n  loginBtnHandler = () => {\r\n    axios.post('http://localhost:8080/', this.state).then((res) => {\r\n      if(res.data.error){\r\n        alert(res.data.error);\r\n      } else {\r\n        localStorage.setItem('token', res.data.token);\r\n        localStorage.setItem('currentUser', JSON.stringify(res.data.userFound));\r\n\r\n        this.props.login(\r\n          res.data.userFound, \r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        Username:{' '}\r\n        <input \r\n          type=\"text\" \r\n          value={this.state.username}\r\n          onChange={(e) => { this.setState({ username: e.target.value }) }}\r\n        />\r\n        <br />\r\n        Password:{' '}\r\n        <input \r\n          type=\"password\" \r\n          value={this.state.password}\r\n          onChange={(e) => { this.setState({ password: e.target.value }) }}\r\n        />\r\n        <br />\r\n        <button onClick={ this.loginBtnHandler }>Login</button>\r\n      </div>    \r\n    );    \r\n  }\r\n}\r\n\r\nexport default connect(null, { login })(LoginForm);\r\n","import React from 'react';\r\nimport { login } from '../actions';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nclass RegistrationForm extends React.Component {\r\n  state = {\r\n    firstName: '',\r\n    lastName: '',\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: '',    \r\n  }\r\n\r\n  register = () => {\r\n\r\n    if(this.state.confirmPassword !== this.state.password){\r\n      return (alert(`Passwords doesn't match. Please type the same passwords`));\r\n    }\r\n\r\n    axios.post('http://localhost:8080/register', this.state).then((res) => {\r\n\r\n      localStorage.setItem('token', res.data.token);\r\n      localStorage.setItem('currentUser', JSON.stringify(res.data.userData));\r\n      \r\n      this.props.login(\r\n        res.data.userData,\r\n      );\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return(\r\n      <div>\r\n        First Name:{' '}\r\n        <input \r\n          type=\"text\" \r\n          value={this.state.firstName}\r\n          onChange={(e) => { this.setState({ firstName: e.target.value }) }}\r\n        />\r\n        <br />\r\n        Last Name:{' '}\r\n        <input \r\n          type=\"text\" \r\n          value={this.state.lastName}\r\n          onChange={(e) => { this.setState({ lastName: e.target.value }) }}\r\n        />\r\n        <br />\r\n        Username:{' '}\r\n        <input \r\n          type=\"text\" \r\n          value={this.state.username}\r\n          onChange={(e) => { this.setState({ username: e.target.value }) }}\r\n        />\r\n        <br />\r\n        Password:{' '}\r\n        <input \r\n          type=\"password\" \r\n          value={this.state.password}\r\n          onChange={(e) => { this.setState({ password: e.target.value }) }}\r\n        />\r\n        <br />\r\n        Confirm Password:{' '}\r\n        <input \r\n          type=\"password\" \r\n          value={this.state.confirmPassword}\r\n          onChange={(e) => { this.setState({ confirmPassword: e.target.value }) }}\r\n        />\r\n        <br />\r\n        <button onClick={ this.register }>Register</button>\r\n      </div>\r\n    );    \r\n  }    \r\n}\r\n\r\nexport default connect(null, { login })(RegistrationForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { setEntries, addEntry } from '../actions';\r\n\r\nclass AddEntryForm extends React.Component {\r\n\r\n  state = {\r\n    dateForm: '',\r\n    contentForm: '',\r\n  }\r\n\r\n  dateChangeHandler = (e) => {\r\n    this.setState({\r\n        dateForm: e.target.value,  \r\n    });\r\n\r\n  }\r\n\r\n  contentChangeHandler = (e) => {\r\n    this.setState({\r\n        contentForm: e.target.value,  \r\n    });\r\n  }\r\n\r\n  submitFormHandler = (e) => {\r\n    this.setState({\r\n      dateForm: '',\r\n      contentForm: '',\r\n    });\r\n    this.addNewEntryHandler();\r\n    this.props.toggleAddEntryForm();\r\n    e.preventDefault();\r\n  }\r\n\r\n  addNewEntryHandler = () => {\r\n    \r\n    axios.post('http://localhost:8080/entries', {\r\n      user_id: this.props.currentUser._id,\r\n      entryDate: this.state.dateForm,\r\n      content: this.state.contentForm,\r\n    }, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('token'), \r\n      }, \r\n    }).then(res => {\r\n      \r\n      let localStorageEntries = JSON.parse(localStorage.getItem('entries'));\r\n      localStorageEntries.push(res.data);\r\n      localStorage.setItem('entries', JSON.stringify(localStorageEntries));\r\n\r\n      this.props.addEntry(res.data);\r\n\r\n      alert('Entry Added!');\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n        <form onSubmit={this.submitFormHandler}>\r\n          <br />\r\n          <label htmlFor='date'>Journal Entry Date:</label>\r\n          <br />\r\n          <input type='date' id='date' required onChange={this.dateChangeHandler}/>\r\n          <br />\r\n          <br />\r\n          <label htmlFor='content'>Journal Entry Content:</label>\r\n          <br />\r\n          <textarea autoFocus={true} id='content' cols='60' rows='20' onChange={this.contentChangeHandler}/>\r\n          <br />\r\n          <input type='submit' value='Save' />\r\n        </form>\r\n        <br />\r\n      </div>    \r\n    );  \r\n  }    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      currentUser: state.user,\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { setEntries, addEntry })(AddEntryForm);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setShowMonthlyEntries } from '../actions';\r\n\r\nclass Month extends React.Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className='month'>\r\n        <div onClick={() => {\r\n          this.props.setShowMonthlyEntries(this.props.index); //this sends the month\r\n        }}>\r\n          {this.props.month}\r\n        </div>\r\n      </div>\r\n    );    \r\n  };\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filteredEntriesByYear: state.filteredEntriesByYear,    \r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { setShowMonthlyEntries })(Month);\r\n\r\n","import React from 'react';\r\nimport Month from './Month';\r\nimport { connect } from 'react-redux';\r\nimport { setSelectedYear } from '../actions';\r\n\r\nconst months = [\r\n  \"Jan\", \"Feb\", \"Mar\", \"Apr\", \r\n  \"May\", \"Jun\", \"Jul\", \"Aug\", \r\n  \"Sep\", \"Oct\", \"Nov\", \"Dec\"\r\n];\r\n\r\nclass Calendar extends React.Component {\r\n\r\n  previousClickHandler = () => {\r\n    this.props.setSelectedYear(this.props.year - 1);  \r\n  }\r\n\r\n  nextClickHandler = () => {\r\n    this.props.setSelectedYear(this.props.year + 1);\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <span className='yearChanger' onClick={this.previousClickHandler}>Previous</span>\r\n          <span> {this.props.year} </span>\r\n          <span className='yearChanger' onClick={this.nextClickHandler}>Next</span>\r\n        </div>\r\n        <br />\r\n        <div className='monthsContainer'>\r\n            {months.map((month, index) => {\r\n              return <Month \r\n                month={month} //string verion of month\r\n                key={month}\r\n                index={index} //will also act as numeric form of month\r\n              />\r\n            })}\r\n          </div>\r\n          <br />\r\n      </div>\r\n    );    \r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n      year: state.yearSelected,   \r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, { setSelectedYear })(Calendar);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { updateEntry, deleteEntry } from '../actions';\r\n\r\nclass Entry extends React.Component {\r\n\r\n  state = {\r\n    isEditClicked: false,\r\n    isDeleteClicked: false,\r\n    editedContent: this.props.entry.content,\r\n  }\r\n\r\n  editContentChangeHandler = (e) => {\r\n    this.setState({\r\n      editedContent: e.target.value,\r\n    });\r\n  }\r\n\r\n  editBtnClickHandler = () => {\r\n    this.setState({\r\n      isEditClicked: !this.state.isEditClicked,\r\n    });\r\n  }\r\n\r\n  deleteBtnClickHandler = () => {\r\n    this.setState({\r\n      isDeleteClicked: !this.state.isDeleteClicked,\r\n    });\r\n  }\r\n\r\n  submitBtnHandler = () => {\r\n    \r\n    axios.patch('http://localhost:8080/entries/' + this.props.entry._id, {\r\n      content: this.state.editedContent,\r\n    }, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('token'), \r\n      }, \r\n    }).then((res) => {\r\n\r\n      let localStorageEntries = JSON.parse(localStorage.getItem('entries'));\r\n \r\n      for(let index = 0; index < localStorageEntries.length; ++index){\r\n \r\n        if(localStorageEntries[index]._id === res.data._id){\r\n          localStorageEntries[index].content = this.state.editedContent;\r\n          break;\r\n        }\r\n        \r\n      }\r\n\r\n      localStorage.setItem('entries', JSON.stringify(localStorageEntries));\r\n\r\n      this.setState({\r\n        isEditClicked: false,\r\n        isDeleteClicked: false,\r\n      });\r\n      \r\n      this.props.updateEntry({\r\n        updatedEntries: localStorageEntries,\r\n        entryUpdated: res.data,\r\n        newContent: this.state.editedContent,\r\n      });\r\n\r\n      \r\n      alert('Entry Updated!');\r\n    });\r\n  }\r\n\r\n  deleteEntry = () =>{\r\n    \r\n    axios.delete('http://localhost:8080/entries/' + this.props.entry._id, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + localStorage.getItem('token'), \r\n      }, \r\n    }).then((res) => {\r\n      \r\n      let localStorageEntries = JSON.parse(localStorage.getItem('entries'));\r\n\r\n      localStorageEntries = localStorageEntries.filter((entry) => {\r\n        return entry._id !== res.data._id;\r\n      });\r\n\r\n      localStorage.setItem('entries', JSON.stringify(localStorageEntries));\r\n\r\n      this.setState({\r\n        isDeleteClicked: !this.state.isDeleteClicked,\r\n      });\r\n\r\n      this.props.deleteEntry(res.data);\r\n\r\n      alert('Entty deleted!');\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div autoFocus={true} className='entryContainer'>\r\n        <div className='entryDate'>\r\n          {this.props.entry.entryDate}\r\n        </div>\r\n        <div>\r\n          <button onClick={this.editBtnClickHandler}>Edit</button>\r\n          {' '}\r\n          <button onClick={this.deleteBtnClickHandler}>Delete</button>\r\n        </div>\r\n        <p \r\n          className='entryContent'\r\n        >{this.props.entry.content}</p>\r\n        {this.state.isEditClicked ? \r\n          <div>\r\n            <textarea \r\n              autoFocus={true} \r\n              id='content' \r\n              cols='60' \r\n              rows='20' \r\n              onChange={this.editContentChangeHandler}\r\n              value={this.state.editedContent}\r\n            />\r\n            <br />\r\n            <button onClick={this.submitBtnHandler}>Submit</button>\r\n          </div>\r\n          :\r\n          null\r\n        }\r\n        {this.state.isDeleteClicked ? \r\n          <div className='deleteForm'>\r\n            <p>\r\n              Are you sure you want to delete this entry?\r\n            </p>\r\n            <div>\r\n              <button onClick={this.deleteEntry}>Yes</button>\r\n              {' '}\r\n              <button \r\n                autoFocus={true} \r\n                onClick={() => {\r\n                  this.setState({\r\n                    isDeleteClicked: !this.state.isDeleteClicked,\r\n                  })\r\n                }}\r\n              >No</button>\r\n            </div>\r\n          </div>\r\n          :\r\n          null\r\n        }\r\n        <br />\r\n      </div>    \r\n    );   \r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.user,\r\n    entries: state.entries,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { updateEntry, deleteEntry })(Entry);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setShowMonthlyEntries } from '../actions';\r\nimport Entry from './Entry';\r\n\r\nclass MonthlyEntries extends React.Component{\r\n\r\n  render (){\r\n    return (\r\n      <div className='monthlyEntriesContainer'>\r\n        {\r\n          this.props.filteredEntriesByMonth.map((entry, index) => {\r\n            return <Entry \r\n              key ={index}\r\n              entry = {entry}\r\n            />\r\n          })\r\n        }\r\n      </div>    \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filteredEntriesByMonth: state.filteredEntriesByMonth,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { setShowMonthlyEntries })(MonthlyEntries);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { setEntries, logout } from '../actions';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AddEntryForm from './AddEntryForm';\r\nimport Calendar from './Calendar';\r\nimport MonthlyEntries from './MonthlyEntries';\r\n\r\nclass Entries extends React.Component {\r\n\r\n  state = {\r\n    showAddEntryForm: false,\r\n    isLogoutClicked: false,\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(localStorage.getItem('currentUser')){\r\n      axios.get('http://localhost:8080/entries', {\r\n        headers: {\r\n          Authorization: 'Bearer ' + localStorage.getItem('token'), \r\n        },\r\n  \r\n        params: {\r\n          user_id: this.props.currentUser._id,\r\n        }\r\n      }).then(res => {\r\n        localStorage.setItem('entries', JSON.stringify(res.data.entries));\r\n        \r\n        this.props.setEntries(\r\n          res.data.entries,\r\n        );\r\n\r\n      }); \r\n    }\r\n\r\n  }\r\n\r\n  toggleAddEntryForm = () => {\r\n    this.setState({\r\n      showAddEntryForm: false,\r\n    });\r\n  }\r\n\r\n  logoutHandler = () => {\r\n\r\n    localStorage.removeItem('currentUser');\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('entries');\r\n\r\n    this.setState({\r\n      isLogoutClicked: true,\r\n    });\r\n    \r\n    this.props.logout();\r\n\r\n  }\r\n\r\n  render(){ \r\n    return (\r\n      <div className='mainContainer'> \r\n        {localStorage.getItem('currentUser') && localStorage.getItem('token') ?\r\n          <div>\r\n            <nav>\r\n              <span>{JSON.parse(localStorage.getItem('currentUser')).username}</span>\r\n              <span className='logout' onClick={this.logoutHandler}>Logout</span>\r\n            </nav>\r\n            <p>\r\n              Hello, {this.props.currentUser.firstName}! How was your day?\r\n            </p>      \r\n            <br />\r\n            <div \r\n              onClick = {() => {this.setState({showAddEntryForm: !this.state.showAddEntryForm})}}\r\n              className = 'addNewEntry'  \r\n            >\r\n              Add New Entry\r\n            </div>\r\n            {\r\n              this.state.showAddEntryForm ? \r\n              <AddEntryForm toggleAddEntryForm={this.toggleAddEntryForm}/> : null\r\n            }\r\n            <br />\r\n            <Calendar />\r\n            {this.props.showMonthlyEntries ? <MonthlyEntries /> : null}\r\n          </div>  :\r\n          <div><Redirect to=\"/\" /></div>\r\n        }\r\n      </div>  \r\n    );    \r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.user,\r\n    showMonthlyEntries: state.showMonthlyEntries,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, { setEntries, logout })(Entries);","// import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { Link, Route, Redirect } from 'react-router-dom';\nimport LoginForm from './components/LoginForm';\nimport RegistrationForm from './components/RegistrationForm';\nimport Entries from './components/Entries';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n\n  render () {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          { localStorage.getItem('currentUser') && localStorage.getItem('token') ? (\n            <Redirect to=\"/entries\" />\n          ) : (\n            <Redirect to=\"/\" />\n          )}\n          <Route exact path=\"/\">\n            <h1>DIARY APP</h1>\n            <LoginForm />\n            <div>Not yet a member? Register <Link to={'/register'}>here</Link></div>\n          </Route>\n  \n          <Route exact path=\"/register\">\n            <RegistrationForm />\n          </Route>\n\n          <Route exact path=\"/entries\">\n            <Entries />\n          </Route>\n\n        </header>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentUser: state.user,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers';\n// import store from './store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={createStore(reducer)}>\n    {/* <Provider store={store}> */}\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}